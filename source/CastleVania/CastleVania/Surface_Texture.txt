

=============================================/==============================
=============================================/==============================
Khi bạn lập trình game với DirectX thì chắc đã từng nghe qua khái niệm surface, thực chất surface nó giống như off-screen surface. Direct3D sử dụng surface cho rất nhiều thứ, phổ biến nhất là thao tác vẽ hoặc load một ảnh bitmap (png, jpg..) lên nó.
=============================================/==============================
Khi bạn thao tác với Sprite, DirectX sử dụng texture thay cho surface để lưu trữ Sprite image. Sự thay thế này thật sự cũng không có lợi ích nào cho việc nâng cao hiệu suất game, do phần cứng hiện nay khá mạnh để xử lý chúng ta cũng không cảm nhận được rõ sự khác biệt.
=============================================/==============================
Surface và texture có thể ra tạo bao nhiêu cũng được miễn là còn đủ RAM và VRAM để chứa tất cả.
Tóm lại
Front buffer là một vùng trên bộ nhớ được bộ xử lý hiển thị trực tiếp lên
 monitor. Trong Direct3D, các chương trình sẽ không được thao tác trực tiếp 
 lên Front buffer.
 =============================================/==============================
Back Buffer là một vùng trên bộ nhớ, các chương trình có thể thao tác
trực tiếp lên đây hoặc sao chép từ surface khác. Back buffer sẽ không hiển
thị trực tiếp lên monitor.
=============================================/==============================
Surface (off-screen surface) là một bề mặt thứ cấp được lưu trữ trong bộ nhớ của card đồ họa hoặc có thể trong bộ nhớ của hệ thống. Chúng ta có thể thực hiện nhiều thao tác như vẽ bitmap, load ảnh.
=============================================/==============================
Texture một phần tương tự như surface và nó được sử dụng nhiều khi thao tác với Sprite.
=============================================/==============================
Như đã nói, Back buffer và surface thực chất là giống nhau và đều được quản lý bởi interface IDirect3DSurface9,
 nên khi cài đặt chương trình chúng ta cần chỉ đâu là Back buffer
  thông qua hàm IDirect3DDevice9::GetBackBuffer(). Nhưng khi sử dụng đối tượng 
  ID3DXSprite thì chỉ cần chúng ta gọi hàm D3DXCreateSprite() để kết nối đối 
  tượng Sprite với Device.